{"version":3,"sources":["../src/ThemeContext.js","../src/Details.js","../src/useBreedList.js","../src/Pet.js","../src/Results.js","../src/SearchParams.js","../src/App.js","index.js"],"names":["ThemeContext","Details","isLoading","setIsLoading","isShowModal","setIsShowModal","toggleModal","theme","backgroundColor","window","location","localCache","useBreedList","animal","breedList","setBreedList","status","setStatus","requestBreedList","res","fetch","json","breeds","Pet","props","name","breed","images","id","hero","length","Results","pets","map","pet","city","state","SearchParams","ANIMALS","updateAnimal","updateLocation","updateBreed","setPets","setTheme","requestPets","e","preventDefault","target","value","App","background","PORT","process","env","html","fs","readFileSync","toString","parts","split","app","use","express","static","req","staticContext","reactMarkup","url","statusCode","send","end","console","log","listen"],"mappings":"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","file":"index.js","sourceRoot":"../server","sourcesContent":["import { createContext } from \"react\";\n\nconst ThemeContext = createContext([\"green\", () => {}]);\n\nexport default ThemeContext;\n","\nimport ThemeContext from \"./ThemeContext\";\n\nimport React, { useState } from \"react\";\n\n\nconst Details = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isShowModal, setIsShowModal] = useState(false);\n\n  const toggleModal = () => setIsShowModal(!isShowModal);\n  const adopt = () => (window.location = \"http://bit.ly/pet-adopt\");\n\n  return (\n    <div>\n      <ThemeContext.Consumer>\n        {([theme]) => (\n          <button onClick={toggleModal} style={{ backgroundColor: theme }}>\n            Adopt\n          </button>\n        )}\n      </ThemeContext.Consumer>\n      {isShowModal ? (\n        // Modal lives outside of root\n        <Modal>\n          <div>\n            <h1>Wou you like to adopt me</h1>\n            <div className=\"buttons\">\n              <button onClick={adopt}>Yes</button>\n              <button onClick={toggleModal}>NO</button>\n            </div>\n          </div>\n        </Modal>\n      ) : // if we give react null do not render anything\n      null}\n    </div>\n  );\n};\n\nexport default Details;\n\n\n// const DetailsWithRouter = withRouter(Details);\n\n// export default function DetailsErrorBoundary(props) {\n//   return (\n//     <ErrorBoundary>\n//       <DetailsWithRouter {...props} />\n//     </ErrorBoundary>\n//   );\n// }\n","import { useState, useEffect } from \"react\";\n\nconst localCache = {};\n\nexport default function useBreedList(animal) {\n  const [breedList, setBreedList] = useState([]);\n  const [status, setStatus] = useState(\"unloaded\");\n\n  useEffect(() => {\n    if (!animal) {\n      setBreedList([]);\n    } else if (localCache[animal]) {\n      setBreedList(localCache[animal]);\n    } else {\n      requestBreedList();\n    }\n\n    async function requestBreedList() {\n      setBreedList([]);\n      setStatus(\"loading\");\n      const res = await fetch(\n        `http://pets-v2.dev-apis.com/breeds?animal=${animal}`\n      );\n      const json = await res.json();\n      localCache[animal] = json.breeds || [];\n      setBreedList(localCache[animal]);\n      setStatus(\"loaded\");\n    }\n  }, [animal]);\n\n  return [breedList, status];\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Pet = (props) => {\n  const { name, animal, breed, images, location, id } = props;\n\n  let hero = \"http://pets-images.dev-apis.com/pets/none.jpg\";\n  if (images.length) {\n    hero = images[0];\n  }\n\n  return (\n    <Link to={`/details/${id}`} className=\"relative block\">\n      <div className=\"image-container\">\n        <img src={hero} alt={name} />\n      </div>\n      <div className=\"absolute bottom-0 left-0 bg-gradient-to-tr from-white to-transparent pr-2 pt-2\">\n        <h1>{name}</h1>\n        <h2>{`${animal} — ${breed} — ${location}`}</h2>\n      </div>\n    </Link>\n  );\n};\n\nexport default Pet;\n","import React from 'react'\nimport Pet from \"./Pet\";\n\nconst Results = ({ pets }) => {\n  return (\n    <div className=\"grid gap-4 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3\">\n      {!pets.length ? (\n        <h1>No Pets Found</h1>\n      ) : (\n        pets.map((pet) => {\n          return (\n            <Pet\n              animal={pet.animal}\n              key={pet.id}\n              name={pet.name}\n              breed={pet.breed}\n              images={pet.images}\n              location={`${pet.city}, ${pet.state}`}\n              id={pet.id}\n            />\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nexport default Results;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport ThemeContext from \"./ThemeContext\";\nimport useBreedList from \"./useBreedList\";\nimport Results from \"./Results\";\nimport * as qs from 'qs'\nconst ANIMALS = [\"bird\", \"cat\", \"dog\", \"rabbit\", \"reptile\"];\n\nconst SearchParams = () => {\n  const [animal, updateAnimal] = useState(\"\");\n  const [location, updateLocation] = useState(\"\");\n  const [breed, updateBreed] = useState(\"\");\n  const [pets, setPets] = useState([]);\n  const [breeds] = useBreedList(animal);\n  const [theme, setTheme] = useContext(ThemeContext);\n\n  useEffect(() => {\n    requestPets();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  async function requestPets() {\n    const res = await fetch(\n      `http://pets-v2.dev-apis.com/pets?animal=${animal}&location=${location}&breed=${breed}`\n    );\n    const json = await res.json();\n\n    setPets(json.pets);\n  }\n\n\n  return (\n    <div className=\"my-0 mx-auto w-11/12\">\n      <form\n          className=\"p-10 mb-10 rounded-lg bg-gray-200 shadow-lg flex flex-col items-center divide-y divide-gray-900\"\n\n        onSubmit={(e) => {\n          e.preventDefault();\n          requestPets();\n        }}\n      >\n        <label htmlFor=\"location\" className=\"search-label\">\n          Location\n          <input\n            id=\"location\"\n            className=\"search-control\"\n            value={location}\n            placeholder=\"Location\"\n            onChange={(e) => updateLocation(e.target.value)}\n          />\n        </label>\n        <label htmlFor=\"animal\" className=\"search-label\">\n          Animal\n          <select\n            id=\"animal\"\n            className=\"search-control\"\n            value={animal}\n            onChange={(e) => updateAnimal(e.target.value)}\n            onBlur={(e) => updateAnimal(e.target.value)}\n          >\n            <option />\n            {ANIMALS.map((animal) => (\n              <option key={animal} value={animal}>\n                {animal}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"breed\" className=\"search-label\">\n          Breed\n          <select\n            disabled={!breeds.length}\n            id=\"breed\"\n            className=\"search-control disabled:opacity-50\"\n            value={breed}\n            onChange={(e) => updateBreed(e.target.value)}\n            onBlur={(e) => updateBreed(e.target.value)}\n          >\n            <option />\n            {breeds.map((breed) => (\n              <option key={breed} value={breed}>\n                {breed}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"theme\" className=\"search-label\">\n          Theme\n          <select\n            value={theme}\n            className=\"search-control\"\n            onChange={(e) => setTheme(e.target.value)}\n            onBlur={(e) => setTheme(e.target.value)}\n          >\n            <option value=\"peru\">Peru</option>\n            <option value=\"darkblue\">Dark Blue</option>\n            <option value=\"chartreuse\">Chartreuse</option>\n            <option value=\"mediumorchid\">Medium Orchid</option>\n          </select>\n        </label>\n        <button className=\"rounded px-6 py-2 text-white hover:opacity-50 border-none bg-red-400\" >Submit</button>\n      </form>\n      <Results pets={pets} />\n    </div>\n  );\n};\n\nexport default SearchParams;\n","import { useState, StrictMode } from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport Details from \"./Details\";\nimport SearchParams from \"./SearchParams\";\nimport ThemeContext from \"./ThemeContext\";\n\nconst App = () => {\n  const theme = useState(\"darkblue\");\n  return (\n    <StrictMode>\n    <ThemeContext.Provider value={theme}>\n      <div\n      className=\"p-0 m-0\"\n      style={{\n        background: \"url(http://pets-images.dev-apis.com/pets/wallpaperA.jpg)\"\n      }}\n      >\n          <header\n          className=\"w-full mb-10 mt-[20px] text-center bg-gradient-to-b from-purple-400 via-pink-100 to-red-500\"\n          >\n            <Link to=\"/\" className=\"text-6xl text-white hover:text-gray-200\">Adopt Me!</Link>\n          </header>\n          <Switch>\n            <Route path=\"/details/:id\">\n              <Details />\n            </Route>\n            <Route path=\"/\">\n              <SearchParams />\n            </Route>\n          </Switch>\n      </div>\n    </ThemeContext.Provider>\n    </StrictMode>\n  );\n};\n\nexport default App;\n","import React from 'react-dom'\nimport express from \"express\";\nimport { renderToString } from \"react-dom/server\";\nimport { StaticRouter } from \"react-router-dom\";\nimport fs from \"fs\";\nimport App from \"../src/App\";\n\nconst PORT = process.env.PORT || 3000;\n\nconst html = fs.readFileSync(\"dist/index.html\").toString();\n\nconst parts = html.split(\"not rendered\");\n\nconst app = express();\n\napp.use(\"/dist\", express.static(\"dist\"));\napp.use((req, res) => {\n  const staticContext = {};\n  const reactMarkup = (\n    <StaticRouter url={req.url} context={staticContext}>\n      <App />\n    </StaticRouter>\n  );\n\n  res.status(staticContext.statusCode || 200);\n  res.send(`${parts[0]}${renderToString(reactMarkup)}${parts[1]}`);\n  res.end();\n});\n\nconsole.log(`listening on http://localhost:${PORT}`);\napp.listen(PORT);\n"]}